AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: S2si Yonkers Businesses
Parameters:
  ArtifactBucket:
    Description: BucketName for the Artifacts for the APIs in this account
    Type: String
    Default: joelturkey
  Environment:
    AllowedValues:
      - Dev
      - QA
      - Prod
    ConstraintDescription: You must specify a valid EnvironmentValue
    Default: Dev
    Description: Environment to Deploy to
    Type: String
  BusinessTableParam:
    Type: String
    Default: "JoelBusiness"

Globals:
  Function:
    Timeout: 5
  #   Tracing: Active
  # Api:
  #   TracingEnabled: true

Resources:

  CloudWatchRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - >-
          arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
  Account:
    Type: 'AWS::ApiGateway::Account'
    Properties:
      CloudWatchRoleArn: !GetAtt 
        - CloudWatchRole
        - Arn

  BusinessTable:
    Type: AWS::DynamoDB::Table
    Description: Users table
    Properties:
      TableName: JoelBusiness
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: "BusinessId"
          AttributeType: S
      KeySchema:
        - AttributeName: "BusinessId"
          KeyType: HASH

  CategoryTable:
    Type: AWS::DynamoDB::Table
    Description: Users table
    Properties:
      TableName: JoelCategory
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: "categoryId"
          AttributeType: S
      KeySchema:
        - AttributeName: "categoryId"
          KeyType: HASH

  CreateNewCategory:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: lambdas/createNewCategory
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 180
      FunctionName: CreateNewCategory
      # Environment:
      #   Variables:
      #     # TABLE_S2SI: my_s2si_table_name
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaVPCAccessExecutionRole
        - CloudWatchLogsFullAccess
      Tags:
        Author: Joel Fogue
        Project: s2si
      Events:
        CreateNewCategory:
          Type: Api
          Properties:
            Path: "/category"
            Method: post
            RestApiId:
              Ref: RestAPI

  UpdateCategory:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: lambdas/updateCategory
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 180
      FunctionName: UpdateCategory
      # Environment:
      #   Variables:
      #     TABLE_s2si: my_s2si_table_name
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaVPCAccessExecutionRole
        - CloudWatchLogsFullAccess
      Tags:
        Author: Joel Fogue
        Project: s2si
      Events:
        UpdateCategory:
          Type: Api
          Properties:
            Path: "category/{categoryId}"
            Method: put
            RestApiId:
              Ref: RestAPI

  DeleteCategory:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: lambdas/deleteCategory
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 180
      FunctionName: DeleteCategory
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaFullAccess
        - AWSLambdaExecute
        - AWSLambdaVPCAccessExecutionRole
        - CloudWatchLogsFullAccess
      Tags:
        Author: Joel Fogue
        Project: s2si
      Events:
        DeleteCategory:
          Type: Api
          Properties:
            Path: "/delete"
            Method: delete
            RestApiId:
              Ref: RestAPI

  GetAllCategories:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: lambdas/getAllCategories
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 180
      FunctionName: Categories
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaVPCAccessExecutionRole
        - CloudWatchLogsFullAccess
      Tags:
        Author: Joel Fogue
        Project: s2si
      Events:
        getAllCategories:
          Type: Api
          Properties:
            Path: /categories
            Method: get
            RestApiId:
              Ref: RestAPI

  CreateNewBusiness:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: lambdas/createNewBusiness
      Handler: app.lambda_handler
      Runtime: python3.7
      MemorySize: 128
      Timeout: 180
      FunctionName: CreateNewBusiness
      Environment:
        Variables:
          BUSINESS_TABLE_NAME: !Ref BusinessTableParam
          LOG_LEVEL: "INFO"
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaVPCAccessExecutionRole
        - CloudWatchLogsFullAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref BusinessTableParam
      Tags:
        Author: Joel Fogue
        Project: s2si
      Events:
        CreateNewBusiness:
          Type: Api
          Properties:
            Path: "/Business"
            Method: get
            RestApiId:
              Ref: RestAPI

  FindAllBusinesses:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: lambdas/findAllBusinesses
      Handler: app.lambda_handler
      Runtime: python3.7
      MemorySize: 128
      Timeout: 180
      FunctionName: FindAllBusinesses
      Environment:
        Variables:
          BUSINESS_TABLE_NAME: !Ref BusinessTableParam
          LOG_LEVEL: "INFO"
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaVPCAccessExecutionRole
        - CloudWatchLogsFullAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref BusinessTableParam
      Tags:
        Author: Joel Fogue
        Project: s2si
      Events:
        CreateNewBusiness:
          Type: Api
          Properties:
            Path: "/Businesses"
            Method: get
            RestApiId:
              Ref: RestAPI

  FindAllBusinessesByCategories:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: lambdas/findAllBusinessesByCategories
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 900
      FunctionName: findAllBusinessesByCategories
      Policies:
        - AWSLambdaBasicExecutionRole
        - CloudWatchLogsFullAccess
        - AWSLambdaRole
      Tags:
        Author: Joel Fogue
        Project: s2si
      Events:
        findAllBusinessesByCategories:
          Type: Api
          Properties:
            Path: /Businesses/category
            Method: get
            RestApiId:
              Ref: RestAPI

  GetBusinessById:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: lambdas/getBusinessById
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 900
      FunctionName: GetBusinessById
      Policies:
        - AWSLambdaBasicExecutionRole
        - CloudWatchLogsFullAccess
        - AWSLambdaRole
      Tags:
        Author: Joel Fogue
        Project: s2si
      Events:
        getBusinessById:
          Type: Api
          Properties:
            Path: /Business/{BusinessId}
            Method: get
            RestApiId:
              Ref: RestAPI

  UpdateExistingBusiness:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: lambdas/updateExistingBusiness
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 900
      FunctionName: UpdateExistingBusiness
      Policies:
        - AWSLambdaBasicExecutionRole
        - CloudWatchLogsFullAccess
        - AWSLambdaRole
      Tags:
        Author: Joel Fogue
        Project: s2si
      Events:
        getBusinessById:
          Type: Api
          Properties:
            Path: /Business/{BusinessId}
            Method: put
            RestApiId:
              Ref: RestAPI

  DeleteBusiness:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: lambdas/deleteBusiness
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 900
      FunctionName: DeleteBusiness
      Policies:
        - AWSLambdaBasicExecutionRole
        - CloudWatchLogsFullAccess
        - AWSLambdaRole
      Tags:
        Author: Joel Fogue
        Project: s2si
      Events:
        getBusinessById:
          Type: Api
          Properties:
            Path: /Business/{BusinessId}
            Method: put
            RestApiId:
              Ref: RestAPI

  RestAPI:
    Type: "AWS::Serverless::Api"
    DependsOn:
      - BusinessTable
      - CategoryTable
    Properties:
      StageName: develop
      CacheClusterEnabled: true
      CacheClusterSize: "0.5"
      Cors:
        AllowOrigin: "'*'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      Variables:
        Version: 0.4.0
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: swagger.yaml
