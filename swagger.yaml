swagger: "2.0"
info:
  description: "This is an API for the list of businesses around Yonkers"
  version: "1.0.0"
  title: "S2si Yonkers Businesses"
  contact:
    email: "joelfoit@gmail.com"
host: "api-gateway"
basePath: "/v0"
tags:
- name: "categories"
  description: "A list of all business categories"
schemes:
- "https"
- "http"
paths:
  /category:
    post:
      tags:
      - "Category"
      summary: "Adds a new category to the database"
      description: ""
      operationId: "CreateNewCategory"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Category object that needs to be added to the DB"
        required: true
        schema:
          $ref: "#/definitions/Category"
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
          schema:
            $ref: '#/definitions/qtAttributes'
        '400':
          $ref: '#/responses/Failure'
        '401':
          $ref: '#/responses/Unauthenticated'
        '403':
          $ref: '#/responses/Forbidden'
        '429':
          $ref: '#/responses/Throttled'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri:
          'Fn::Sub': >-
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${CreateNewCategory}/invocations

  /category/{categoryId}:
    put:
      tags:
      - "Category"
      summary: "Update an existing category"
      description: ""
      operationId: "UpdateCategory"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "categoryId"
        in: "path"
        description: "The category that needs to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Update the category object"
        required: true
        schema:
          $ref: "#/definitions/Category"
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
          schema:
            $ref: '#/definitions/qtAttributes'
        '400':
          $ref: '#/responses/Failure'
        '401':
          $ref: '#/responses/Unauthenticated'
        '403':
          $ref: '#/responses/Forbidden'
        '429':
          $ref: '#/responses/Throttled'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri:
          'Fn::Sub': >-
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${UpdateCategory}/invocations
    delete:
      tags:
      - "Category"
      summary: "Deletes a category"
      description: ""
      operationId: "DeleteCategory"
      produces:
      - "application/json"
      parameters:
      # - name: "api_key"
      #   in: "header"
      #   required: false
      #   type: "string"
      - name: "categoryId"
        in: "path"
        description: "Category id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
          schema:
            $ref: '#/definitions/qtAttributes'
        '400':
          $ref: '#/responses/Failure'
        '401':
          $ref: '#/responses/Unauthenticated'
        '403':
          $ref: '#/responses/Forbidden'
        '429':
          $ref: '#/responses/Throttled'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri:
          'Fn::Sub': >-
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${DeleteCategory}/invocations
        
  /categories:      
    get:
      tags:
      - "Category"
      summary: "Returns a list of all categories"
      description: "Returns a list of all categories"
      operationId: "getAllCategories"
      produces:
      - "application/json"
      parameters: []
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
          schema:
            $ref: '#/definitions/qtAttributes'
        '400':
          $ref: '#/responses/Failure'
        '401':
          $ref: '#/responses/Unauthenticated'
        '403':
          $ref: '#/responses/Forbidden'
        '429':
          $ref: '#/responses/Throttled'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: GET
        uri:
          'Fn::Sub': >-
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${getAllCategories}/invocations
        
  /Business: 
    post:
      tags:
      - "Business"
      summary: "Creates a new business"
      description: ""
      operationId: "CreateNewBusiness"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Body payload for creating a new business object"
        required: true
        schema:
          $ref: "#/definitions/Business"
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
          schema:
            $ref: '#/definitions/qtAttributes'
        '400':
          $ref: '#/responses/Failure'
        '401':
          $ref: '#/responses/Unauthenticated'
        '403':
          $ref: '#/responses/Forbidden'
        '429':
          $ref: '#/responses/Throttled'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri:
          'Fn::Sub': >-
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${CreateNewBusiness}/invocations
          
  /Businesses/category:
    get:
      tags:
      - "Business"
      summary: "Finds all businesses by categories"
      description: ""
      operationId: "findAllBusinessesByCategories"
      produces:
      - "application/json"
      parameters:
      - name: "category"
        in: "query"
        description: "Category to filter the businesses by"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
          schema:
            $ref: '#/definitions/qtAttributes'
        '400':
          $ref: '#/responses/Failure'
        '401':
          $ref: '#/responses/Unauthenticated'
        '403':
          $ref: '#/responses/Forbidden'
        '429':
          $ref: '#/responses/Throttled'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri:
          'Fn::Sub': >-
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${"FindAllBusinessesByCategories"}/invocations
   
  /Business/{BusinessId}:
    get:
      tags:
      - "Business"
      summary: "Find A business by ID"
      description: "Returns a single business"
      operationId: "getBusinessById"
      produces:
      - "application/json"
      parameters:
      - name: "BusinessId"
        in: "path"
        description: "ID of the business to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
          schema:
            $ref: '#/definitions/qtAttributes'
        '400':
          $ref: '#/responses/Failure'
        '401':
          $ref: '#/responses/Unauthenticated'
        '403':
          $ref: '#/responses/Forbidden'
        '429':
          $ref: '#/responses/Throttled'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri:
          'Fn::Sub': >-
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${"getBusinessById"}/invocations

    put:
      tags:
      - "Business"
      summary: "Update an existing Business"
      description: ""
      operationId: "UpdateExistingBusiness"
      produces:
      - "application/json"
      parameters:
      - name: "BusinessId"
        in: "path"
        description: "BusinessId that need to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Payload for updating a new business"
        required: true
        schema:
          $ref: "#/definitions/Business"
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
          schema:
            $ref: '#/definitions/qtAttributes'
        '400':
          $ref: '#/responses/Failure'
        '401':
          $ref: '#/responses/Unauthenticated'
        '403':
          $ref: '#/responses/Forbidden'
        '429':
          $ref: '#/responses/Throttled'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri:
          'Fn::Sub': >-
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${"UpdateExistingBusiness"}/invocations
    delete:
      tags:
      - "Business"
      summary: "Deletes a Business"
      description: ""
      operationId: "deleteBusiness"
      produces:
      - "application/json"
      parameters:
      # - name: "api_key"
      #   in: "header"
      #   required: false
      #   type: "string"
      - name: "BusinessId"
        in: "path"
        description: "Business id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
          schema:
            $ref: '#/definitions/qtAttributes'
        '400':
          $ref: '#/responses/Failure'
        '401':
          $ref: '#/responses/Unauthenticated'
        '403':
          $ref: '#/responses/Forbidden'
        '429':
          $ref: '#/responses/Throttled'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri:
          'Fn::Sub': >-
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${"deleteBusiness"}/invocations
     
# securityDefinitions:
#   api_key:
#     type: "apiKey"
#     name: "api_key"
#     in: "header"
definitions:
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
  Business:
    type: "object"
    required:
    - "BusinessName"
    - "Category"
    properties:
      id:
        type: "integer"
        format: "int64"
      BusinessName:
        type: "string"
      Category:
        $ref: "#/definitions/Category"
      Address:
        type: "string"
      PhoneNumber:
        type: "string"
      CategoryTwo:
        type: "string"
        description: "The category to filter the businesses by"
        enum:
        - "Banks"
        - "Restaurant"
        - "Retail"
        - "Services"
        - "Technology"
      URL:
       type: "string"
       description: "The url of the business website"
      BusinessImageIcon:
        description: "A picture of the business"
        type: "string"
      BusinessHours:
        type: "string"
        description: "The hours of operation of the business"
responses:
  Unauthenticated:
    description: Unauthenticated
    schema:
      $ref: '#/definitions/Error'
    headers:
      Access-Control-Allow-Headers:
        type: string
      Access-Control-Allow-Methods:
        type: string
      Access-Control-Allow-Origin:
        type: string
  Forbidden:
    description: Not Authorized - Permissions Lacking
    schema:
      $ref: '#/definitions/Error'
    headers:
      Access-Control-Allow-Headers:
        type: string
      Access-Control-Allow-Methods:
        type: string
      Access-Control-Allow-Origin:
        type: string
  Throttled:
    description: Too Many Requests
    schema:
      $ref: '#/definitions/Error'
    headers:
      Access-Control-Allow-Headers:
        type: string
      Access-Control-Allow-Methods:
        type: string
      Access-Control-Allow-Origin:
        type: string
  Failure:
    description: Bad Request
    schema:
      $ref: '#/definitions/Error'
    headers:
      Access-Control-Allow-Headers:
        type: string
      Access-Control-Allow-Methods:
        type: string
      Access-Control-Allow-Origin:
        type: string